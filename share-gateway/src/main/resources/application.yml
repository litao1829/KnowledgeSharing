server:
  port: 8000

spring:
  application:
    name: gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        heart-beat-timeout: 15000
        heart-beat-interval: 5000
        namespace: dev
        username: nacos
        password: nacos
    gateway:
      discovery:
        locator:
          #允许网关通过服务发现组件，找到其他微服务
          enabled: true
      routes:
        - id: router-user
          uri: lb://user-service
          predicates:
            - Path=/user-service/user/**
        - id: router-content
          uri: lb://content-service
          predicates:
            - Path=/content-service/**
      globalcors:
        cors-configurations:
          '[/**]':
            #允许请求来源
            allowedOriginPatterns: '*'
            #允许携带的头信息
            allowedHeaders: '*'
            #允许的请求方式
            allowedMethods: '*'
            #是否允许携带cookies
            allowCredentials: 'true'
            #跨域检测的有效期，会发起一个OPTION请求
            maxAge: '3600'

knife4j:
  # 聚合swagger文档
  gateway:
    enabled: true
    version: openapi3
    # 排序规则(tag/operation排序自4.2.0版本新增)
    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序
    tags-sorter: order
    operations-sorter: order
    # 指定手动配置的模式(默认为该模式)
    strategy: manual
    routes:
      - name: 用户服务
        # 真实子服务访问url地址-提供OpenAPI的文档
        url: /user-service/v3/api-docs?group=default
        service-name: user-service
        # 路由前缀
        # 兼容OpenAPI3规范在聚合时丢失contextPath属性的异常情况，由开发者自己配置contextPath,Knife4j的前端Ui做兼容处理,与url属性独立不冲突，仅OpenAPI3规范聚合需要，OpenAPI2规范不需要设置此属性,默认为(apiPathPrefix)
        context-path: /user-service
        order: 2
      - name: 内容服务
        url: /content-service/v3/api-docs?group=default
        service-name: content-service
        # 路由前缀
        context-path: /content-service
        order: 3
